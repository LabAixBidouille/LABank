package org.fablab.labank.dto;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import java.util.Date;
import java.util.List;

/**
 * Created by kprim on 02/03/2017.
 * Classe DTO permettant de gerer les informations relatives aux Event.
 */
@Entity
@Table(name = "Event")
public class EventDTO {

    // ------------------------
    // PRIVATE FIELDS
    // ------------------------

    // An autogenerated id (unique for each event in the db)
    @Id
    @Column(name = "idevent")
    @GeneratedValue(strategy = GenerationType.AUTO)
    private long idEvent;

    // The event's title
    @NotNull
    @Column(name = "title")
    private String title;

    // The event's illustration
    @Column(name = "illustration")
    private String illustration;

    // The event's description
    @NotNull
    @Column(name = "description")
    private String description;

    // The event's type (atelier, formation, etc...)
    @NotNull
    @Column(name = "ideventtype")
    private long idEventType;

    // The event periodicity
    @NotNull
    @Column(name = "allday")
    private boolean allDay;

    // The event's start date
    @NotNull
    @Column(name = "startdate")
    @Temporal(TemporalType.DATE)
    private Date startDate;

    // The event's end date
    @NotNull
    @Column(name = "enddate")
    @Temporal(TemporalType.DATE)
    private Date endDate;

    // The event's start time
    @Column(name = "startat")
    @Temporal(TemporalType.TIMESTAMP)
    private Date startAt;

    // The event's end time
    @Column(name = "endat")
    @Temporal(TemporalType.TIMESTAMP)
    private Date endAt;

    // The recurrence type of the event
    // (in case the event is recurrent... daily, weekly, monthly etc...)
    @NotNull
    @Column(name="idrecurrence")
    private long idRecurrence;

    @Column(name="endrecurrence")
    private Date endRecurrence;

    // The event's price
    @Column(name="standardprice")
    private float standardPrice;

    // Tickets numbers for this event
    @Column(name = "nbtickets")
    private int nbTickets;

    // Available tickets for this event
    @Column(name = "availabletickets")
    private int availableTickets;

    // Facebook share
    @Column(name = "facebookshare")
    private int facebookShare;

    // Twitter share
    @Column(name = "twittershare")
    private int twitterShare;

    // Likes
    private int likes;

    // The theme of the event
    @NotNull
    @Column(name = "ideventtheme")
    private Long idEventTheme;

    // The age range of the event
    @NotNull
    @Column(name = "idagerange")
    private Long idAgeRange;

    // List of special rates
    @OneToMany(mappedBy = "event", cascade = CascadeType.ALL, orphanRemoval = true)
    private List<EventPricesCategoriesDTO> eventPricesCategories;

    // ------------------------
    // PUBLIC METHODS
    // ------------------------

    public EventDTO() { }

    public EventDTO(EventDTO event) {
        this.idEvent = event.idEvent;
        this.title = event.title;
        this.illustration = event.illustration;
        this.description = event.description;
        this.idEventType = event.idEventType;
        this.allDay = event.allDay;
        this.startDate = event.startDate;
        this.endDate = event.endDate;
        this.startAt = event.startAt;
        this.endAt = event.endAt;
        this.idRecurrence = event.idRecurrence;
        this.endRecurrence = event.endRecurrence;
        this.standardPrice = event.standardPrice;
        this.nbTickets = event.nbTickets;
        this.availableTickets = event.availableTickets;
        this.facebookShare = event.facebookShare;
        this.twitterShare = event.twitterShare;
        this.likes = event.likes;
        this.idEventTheme = event.idEventTheme;
        this.idAgeRange = event.idAgeRange;
    }

    public EventDTO(long idEvent, String title, String illustration, String description, long idEventType, boolean allDay,
                    Date startDate, Date endDate, Date startAt, Date endAt, long idRecurrence, Date endRecurrence,
                    float standardPrice, int nbTickets, int availableTickets, int facebookShare,
                    int twitterShare, int likes, Long idEventTheme, Long idAgeRange) {
        this.idEvent = idEvent;
        this.title = title;
        this.illustration = illustration;
        this.description = description;
        this.idEventType = idEventType;
        this.allDay = allDay;
        this.startDate = startDate;
        this.endDate = endDate;
        this.startAt = startAt;
        this.endAt = endAt;
        this.idRecurrence = idRecurrence;
        this.endRecurrence =  endRecurrence;
        this.standardPrice = standardPrice;
        this.nbTickets = nbTickets;
        this.availableTickets = availableTickets;
        this.facebookShare = facebookShare;
        this.twitterShare = twitterShare;
        this.likes = likes;
        this.idEventTheme = idEventTheme;
        this.idAgeRange = idAgeRange;
    }

    // Getter and setter methods


    public long getIdEvent() {
        return idEvent;
    }

    public void setIdEvent(long idEvent) {
        this.idEvent = idEvent;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getIllustration() {
        return illustration;
    }

    public void setIllustration(String illustration) {
        this.illustration = illustration;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public long getIdEventType() {
        return idEventType;
    }

    public void setIdEventType(long idEventType) {
        this.idEventType = idEventType;
    }

    public boolean isAllDay() {
        return allDay;
    }

    public void setAllDay(boolean allDay) {
        this.allDay = allDay;
    }

    public Date getStartDate() {
        return startDate;
    }

    public void setStartDate(Date startDate) {
        this.startDate = startDate;
    }

    public Date getEndDate() {
        return endDate;
    }

    public void setEndDate(Date endDate) {
        this.endDate = endDate;
    }

    public Date getStartAt() {
        return startAt;
    }

    public void setStartAt(Date startAt) {
        this.startAt = startAt;
    }

    public Date getEndAt() {
        return endAt;
    }

    public void setEndAt(Date endAt) {
        this.endAt = endAt;
    }

    public long getIdRecurrence() {
        return idRecurrence;
    }

    public void setIdRecurrence(long idRecurrence) {
        this.idRecurrence = idRecurrence;
    }

    public Date getEndRecurrence() {
        return endRecurrence;
    }

    public void setEndRecurrence(Date endRecurrence) {
        this.endRecurrence = endRecurrence;
    }

    public float getStandardPrice() {
        return standardPrice;
    }

    public void setStandardPrice(float standardPrice) {
        this.standardPrice = standardPrice;
    }

    public int getNbTickets() {
        return nbTickets;
    }

    public void setNbTickets(int nbTickets) {
        this.nbTickets = nbTickets;
    }

    public int getAvailableTickets() {
        return availableTickets;
    }

    public void setAvailableTickets(int availableTickets) {
        this.availableTickets = availableTickets;
    }

    public int getFacebookShare() {
        return facebookShare;
    }

    public void setFacebookShare(int facebookShare) {
        this.facebookShare = facebookShare;
    }

    public int getTwitterShare() {
        return twitterShare;
    }

    public void setTwitterShare(int twitterShare) {
        this.twitterShare = twitterShare;
    }

    public int getLikes() {
        return likes;
    }

    public void setLikes(int likes) {
        this.likes = likes;
    }

    public Long getIdEventTheme() {
        return idEventTheme;
    }

    public void setIdEventTheme(Long idEventTheme) {
        this.idEventTheme = idEventTheme;
    }

    public Long getIdAgeRange() {
        return idAgeRange;
    }

    public void setIdAgeRange(Long idAgeRange) {
        this.idAgeRange = idAgeRange;
    }

    public List<EventPricesCategoriesDTO> getEventPricesCategories() {
        return eventPricesCategories;
    }

    public void setEventPricesCategories(List<EventPricesCategoriesDTO> eventPricesCategories) {
        this.eventPricesCategories = eventPricesCategories;
    }
}
